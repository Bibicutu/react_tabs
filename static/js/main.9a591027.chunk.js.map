{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","useMemo","find","tab","id","selectTabHandler","useCallback","className","map","cn","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcC,mBAClB,kBAAMJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,MAC7BD,EAAK,KAAI,CAACC,IAGXO,EAAmBC,uBAAY,SAACH,GACpC,OAAIA,EAAIC,KAAON,EACN,GAGFC,EAAcI,KACpB,CAACH,IAEJ,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAAAL,GAAG,OACX,oBAEEI,UAAWE,IACT,CAAE,YAAaN,EAAIC,KAAOJ,EAAYI,KAExC,UAAQ,MALV,SAOE,mBACEM,KAAI,WAAMP,EAAIC,IACd,UAAQ,UACRO,QAAS,kBAAMN,EAAiBF,IAHlC,SAKGA,EAAIS,SAXFT,EAAIC,WAkBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGP,EAAYa,SAAWhB,EAAK,GAAGgB,cC9C3BhB,EAAO,CAClB,CAAEO,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASlB,EAAK,GAAGO,IAA3D,mBAAON,EAAP,KAAsBkB,EAAtB,KAEMhB,EAAcC,mBAClB,kBAAMJ,EAAKK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAON,MAC7BD,EAAK,KAAI,CAACC,IAGXC,EAAgBO,uBAAY,SAACH,GACjCa,EAAiBb,EAAIC,MACpB,CAACJ,IAEJ,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBP,EAAYY,SAGlC,qBAAK,UAAQ,gBAAb,SAEE,cAAC,EAAD,CACEf,KAAMA,EACNC,cAAeA,EACfC,cAAeA,UCjCzBkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9a591027.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { useCallback, useMemo } from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = useMemo(\n    () => tabs.find(tab => tab.id === selectedTabId)\n      || tabs[0], [selectedTabId],\n  );\n\n  const selectTabHandler = useCallback((tab) => {\n    if (tab.id === selectedTabId) {\n      return {};\n    }\n\n    return onTabSelected(tab);\n  }, [selectedTab]);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={cn(\n                { 'is-active': tab.id === selectedTab.id },\n              )}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => selectTabHandler(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content || tabs[0].content}\n      </div>\n\n    </div>\n  );\n};\n","import React, { useCallback, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = useMemo(\n    () => tabs.find(tab => tab.id === selectedTabId)\n      || tabs[0], [selectedTabId],\n  );\n\n  const onTabSelected = useCallback((tab: Tab) => {\n    setSelectedTabId(tab.id);\n  }, [selectedTab]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTabId}\n          onTabSelected={onTabSelected}\n        />\n\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}